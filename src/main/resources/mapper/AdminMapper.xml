<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qianxia.finance.mapper.AdminMapper">

    <resultMap id="AdminMap" type="com.qianxia.finance.domain.Admin">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="salt" property="salt"/>
        <result column="status" property="status"/>
        <collection property="roles" javaType="list" ofType="com.qianxia.finance.domain.Role">
            <id column="id" property="id"/>
            <result column="role" property="role"/>
            <result column="description" property="description"/>
        </collection>
    </resultMap>

    <sql id="AdminList">
        id,username,password,salt,status
    </sql>

    <select id="queryAdminByUsername" resultMap="AdminMap">
        SELECT DISTINCT
        <include refid="AdminList"/>
        FROM t_admin
        <where>
            <if test="username != null and username != ''">
                username = #{username}
            </if>
        </where>
    </select>

    <update id="updateAdminStatus">
        UPDATE t_admin SET status = #{status} WHERE id = #{id}
    </update>

    <select id="queryRoleByRoles" resultMap="AdminMap">
        SELECT
            a.id,
            a.username,
            ar.role_id,
            r.role
        FROM
            t_admin a
        JOIN t_admin_role ar ON a.id = ar.admin_id
        JOIN t_role r ON ar.role_id = r.id
        WHERE a.username = #{username}
    </select>

    <select id="queryPermissionsByRoleId" resultMap="AdminMap">
        SELECT
            r.role,
            p.id,
            p.permissions
        FROM
            t_role r
        JOIN t_role_permission rp ON r.id = rp.role_id
        JOIN t_permissions p ON p.id = rp.permission_id
        WHERE
            r.id = #{id}
    </select>
</mapper>